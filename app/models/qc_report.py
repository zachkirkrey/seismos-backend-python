from sqlalchemy.dialects.mysql import JSON
from app.models.mixin_models import TimestampMixin, ModelMixin
from app import db


class NFProcessingResult(TimestampMixin, ModelMixin, db.Model):
    __tablename__ = "nf_processing_result"

    id = db.Column(db.BigInteger, primary_key=True)
    stage_id = db.Column(db.Integer, nullable=False)
    timestamp = db.Column(db.DateTime)
    user_id = db.Column(db.Text)
    c0 = db.Column(db.Float)
    c1 = db.Column(db.Float)
    c2 = db.Column(db.Float)
    c3 = db.Column(db.Float)
    q0 = db.Column(db.Float)
    q1 = db.Column(db.Float)
    q2 = db.Column(db.Float)
    q3 = db.Column(db.Float)
    fit_error = db.Column(db.Float)
    nf_param_id = db.Column(db.Integer)
    connect_ops_risk = db.Column(db.Float)
    connect_efficiency = db.Column(db.Float)
    connect_condition = db.Column(db.Float)


class Stage(TimestampMixin, ModelMixin, db.Model):
    __tablename__ = "stage"

    id = db.Column(db.BigInteger, primary_key=True)
    stage_uuid = db.Column(db.String(36), nullable=False)
    well_id = db.Column(db.Integer)
    stage_number = db.Column(db.Integer)
    number_of_cluster = db.Column(db.Integer)
    stage_start_time = db.Column(db.DateTime)
    stage_end_time = db.Column(db.DateTime)
    plug_depth = db.Column(db.Float)
    frac_design_id = db.Column(db.Integer)
    calc_net_pressure_result = db.Column(db.Float)
    observed_net_pressure = db.Column(db.Float)
    inline_density = db.Column(db.Float)
    blender_density = db.Column(db.Float)
    calc_bh_density = db.Column(db.Float)
    bottomhole_bhp = db.Column(db.Float)
    bottomhole_bht = db.Column(db.Float)
    frac_model_bhp = db.Column(db.Float)
    total_pumpdown_volume = db.Column(db.Float)
    poisson_ratio = db.Column(db.Float)
    pr_gradient = db.Column(db.Double)
    overburden_num = db.Column(db.Double)
    pumping_fluid_viscosity = db.Column(db.Float)
    pumping_fluid_density = db.Column(db.Float)
    pumping_fluid_type = db.Column(db.Text)
    tectonic_gradient = db.Column(db.Double)
    pore_pressure = db.Column(db.Float)
    sleeve_name = db.Column(db.Text)
    sleeve_ordinal = db.Column(db.Integer)
    sleeve_top_measured_depth = db.Column(db.Float)
    sleeve_bottom_measure_depth = db.Column(db.Float)
    sleeve_depth_unit = db.Column(db.Text)
    sleeve_port_size = db.Column(db.Float)
    sleeve_port_size_unit = db.Column(db.Text)
    sleeve_ball_size = db.Column(db.Float)
    sleeve_ball_size_unit = db.Column(db.Text)
    sleeve_seat_id = db.Column(db.Text)
    sleeve_manufacturer = db.Column(db.Text)
    sleeve_model = db.Column(db.Text)
    sleeve_toe_shift_pressure = db.Column(db.Integer)
    sleeve_toe_burst_pressure = db.Column(db.Integer)
    additional = db.Column(JSON)
    approved = db.Column(db.Boolean, default=False)


class StageAVG(TimestampMixin, ModelMixin, db.Model):
    __tablename__ = "stage_avg"

    id = db.Column(db.BigInteger, primary_key=True)
    stage_id = db.Column(db.Integer, nullable=False)
    breakdown_pressure = db.Column(db.Float)
    isip = db.Column(db.Float)
    frac_gradient = db.Column(db.Float)
    diverter = db.Column(db.Float)
    acid = db.Column(db.Float)
    open_well_pressure = db.Column(db.Float)
    isip_5min = db.Column(db.Float)
    isip_10min = db.Column(db.Float)
    isip_15min = db.Column(db.Float)
    time_to_max_rate = db.Column(db.Float)
    avg_pressure = db.Column(db.Float)
    max_pressure = db.Column(db.Float)
    slickwater_volume = db.Column(db.Float)
    total_slurry = db.Column(db.Float)
    total_clean = db.Column(db.Float)
    avg_rate = db.Column(db.Float)
    max_rate = db.Column(db.Float)
    mesh_100 = db.Column("100_mesh", db.Float)
    mesh_30_50 = db.Column("30_50_mesh", db.Float)
    mesh_40_70 = db.Column("40_70_mesh", db.Float)
    mesh_20_40 = db.Column("20_40_mesh", db.Float)
    micro_prop = db.Column(db.Float)
    friction_reducer = db.Column(db.Float)
    gel = db.Column(db.Float)
    crosslink = db.Column(db.Float)
    additional = db.Column(JSON)


class FFProcessingResult(TimestampMixin, ModelMixin, db.Model):
    __tablename__ = "ff_processing_result"

    id = db.Column(db.Integer, primary_key=True)
    timestamp = db.Column(db.DateTime)
    length = db.Column(db.Float)
    width = db.Column(db.Float)
    height = db.Column(db.Float)
    conductivity = db.Column(db.Float)
    minimum_stress = db.Column(db.Float)
    minimun_stress_gradient = db.Column(db.Float)
    net_pressure = db.Column(db.Float)
    fracture_pressure_gradient = db.Column(db.Float)
    reservoir_pressure = db.Column(db.Float)
    reservoir_pressure_gradient = db.Column(db.Float)
    pressure_match = db.Column(db.Float)
    fracture_efficiency = db.Column(db.Float)
    stress_shadow_pressure = db.Column(db.Float)
    calculated_poisson_ratio = db.Column(db.Float)
    stage_id = db.Column(db.Integer)
    ff_parameter_id = db.Column(db.Integer)
    nwb_region_size = db.Column(db.Float)
    nwb_compressibility = db.Column(db.Float)
    nwb_compressibilitynwb_permeability = db.Column(db.Float)
    ff_version = db.Column(db.Text)
    unit = db.Column(db.Text)
